<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Jasmine Spec Runner</title>

  <link rel="stylesheet" type="text/css" href="../css/jasmine.css">
  <script type="text/javascript" src="../js/jasmine.js"></script>
  <script type="text/javascript" src="../js/jasmine-html.js"></script>
  <script type="text/javascript" src="../js/webworks.js"></script>


  <!-- include spec files here... -->
  <script type="text/javascript" src="spec/blackberry.app.js"></script>
  <script type="text/javascript" src="spec/blackberry.connection.js"></script>
  <script type="text/javascript" src="spec/blackberry.event.js"></script>
  <script type="text/javascript" src="spec/blackberry.identity.js"></script>
  <script type="text/javascript" src="spec/blackberry.invoke.js"></script>
  <script type="text/javascript" src="spec/blackberry.invoke.card.js"></script>
  <script type="text/javascript" src="spec/blackberry.invoked.js"></script>
  <script type="text/javascript" src="spec/blackberry.io.filetransfer.js"></script>
  <script type="text/javascript" src="spec/blackberry.io.js"></script>
  <script type="text/javascript" src="spec/blackberry.js"></script>
  <script type="text/javascript" src="spec/blackberry.pim.contacts.js"></script>
  <script type="text/javascript" src="spec/blackberry.push.js"></script>
  <script type="text/javascript" src="spec/blackberry.system.js"></script>
  <script type="text/javascript" src="spec/blackberry.ui.dialog.js"></script>
  <script type="text/javascript" src="spec/blackberry.bbm.platform.js"></script>
  <script type="text/javascript" src="spec/crossOrigin.js"></script>
  <script type="text/javascript" src="spec/remoteFunctionCall.js"></script>
  <script type="text/javascript" src="spec/blackberry.notification.js"></script>

  <script type="text/javascript">
      var jasmineEnv = jasmine.getEnv();
      jasmineEnv.updateInterval = 1000;

      function sendReport(report) {
        var xmlhttp = new XMLHttpRequest();
        console.log("Sending testing result now...");
        xmlhttp.onreadystatechange=function()
        {
          if (xmlhttp.readyState==4 && xmlhttp.status==200)
          {
            console.log(xmlhttp.responseText);
          }
        }
        //xmlhttp.open("POST", "http://169.254.0.2:8125/testReport", true);
        xmlhttp.open("POST", "http://169.254.0.2:3000/report", true);
        xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        xmlhttp.send(JSON.stringify(report));
      }

      var htmlReporter = new jasmine.HtmlReporter();
      htmlReporter.reportRunnerResults = function(runner) {
        //reportRunnerResults(runner);
        var specs = runner.specs();
        var specResults;
        var assertionCount = {total: 0, passed: 0, failed: 0};
        var report ={};

        for (var i = 0; i < specs.length; ++i) {
          if (this.specFilter(specs[i])) {
            specResults = specs[i].results();
            assertionCount.total += specResults.totalCount;
            assertionCount.passed += specResults.passedCount;
            assertionCount.failed += specResults.failedCount;
          }
        }

        if (console && console.log) {
          report.total = assertionCount.total;
          report.passed = assertionCount.passed;
          report.failed = assertionCount.failed;
          report.details = document.documentElement.innerHTML;
        }
        sendReport(report);
      };

      jasmineEnv.addReporter(htmlReporter);

      jasmineEnv.specFilter = function(spec) {
        return htmlReporter.specFilter(spec);
      };

      var currentWindowOnload = window.onload;

      window.onload = function() {
        if (currentWindowOnload) {
          currentWindowOnload();
        }
        //execJasmine();
      };

      function execJasmine() {
        jasmineEnv.execute();
        console.log("Running Testing");
      }

      document.addEventListener("webworksready", function () {
        execJasmine();
      });

  </script>

</head>

<body>
    <input id="backButton "type="button" value="Back" onclick="history.back();" />
</body>
</html>
